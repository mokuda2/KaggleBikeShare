beta1_h[k] <- rnorm(1, m1star_h, sqrt(v1star_h))
# update sigma2 by sampling from its complete conditional using a metropolis step
sig2_cand_h <- rnorm(1, sigma2_h[k-1], 25)
sigma2_h[k] <- sigma2_h[k-1]
if(sig2_cand_h > 0){
lpcand_h <- sum(dnorm(bp_h, beta0_h[k] + beta1_h[k]*bmi_h, sqrt(sig2_cand_h), log=TRUE)) +
dinvgamma(sig2_cand_h, a, b, log=TRUE)
lpcurr_h <- sum(dnorm(bp_h, beta0_h[k] + beta1_h[k]*bmi_h, sqrt(sigma2_h[k-1]), log=TRUE)) +
dinvgamma(sigma2_h[k-1], a, b, log=TRUE)
alpha_h <- min(1, exp(lpcand_h - lpcurr_h))
u_h <- runif(1,0,1)
if(alpha_h > u_h) sigma2_h[k] <- sig2_cand_h
}
}
for(k in 2:K){
# update beta0 by sampling from its complete conditional
m0star_d <- ((1/sigma2_d[k-1])*sum(bp_d - beta1_d[k-1]*bmi_d) + (1/v0)*m0)/
(n_d/sigma2_d[k-1] + 1/v0)
v0star_d <- 1/(n_d/sigma2_d[k-1] + 1/v0)
beta0_d[k] <- rnorm(1, m0star_d, sqrt(v0star_d))
# update beta1 by sampling from its complete conditional
m1star_d <- ((1/sigma2_d[k-1])*sum(bmi_d*(bp_d - beta0_d[k])) + (1/v1)*m1)/
(sum(bmi_d^2)/sigma2_d[k-1] + 1/v1)
v1star_d <- 1/(sum(bmi_d^2)/sigma2_d[k-1] + 1/v1)
beta1_d[k] <- rnorm(1, m1star_d, sqrt(v1star_d))
# update sigma2 by sampling from its complete conditional using a metropolis step
sig2_cand_d <- rnorm(1, sigma2_d[k-1], 50)
sigma2_d[k] <- sigma2_d[k-1]
if(sig2_cand_d > 0){
lpcand_d <- sum(dnorm(bp_d, beta0_d[k] + beta1_d[k]*bmi_d, sqrt(sig2_cand_d), log=TRUE)) +
dinvgamma(sig2_cand_d, a, b, log=TRUE)
lpcurr_d <- sum(dnorm(bp_d, beta0_d[k] + beta1_d[k]*bmi_d, sqrt(sigma2_d[k-1]), log=TRUE)) +
dinvgamma(sigma2_d[k-1], a, b, log=TRUE)
alpha_d <- min(1, exp(lpcand_d - lpcurr_d))
u_d <- runif(1,0,1)
if(alpha_d > u_d) sigma2_d[k] <- sig2_cand_d
}
}
keep2 <- seq(1, K, by=100) + 1
par(mfrow=c(3,2))
plot(beta0_h[keep2], type='l')
acf(beta0_h[keep2])
plot(beta0_h[keep2], type='l')
acf(beta1_h[keep2])
plot(sigma2_h[keep2], type='l')
acf(sigma2_h[keep2])
par(mfrow=c(3,2))
plot(beta0_d[keep2], type='l')
acf(beta0_d[keep2])
plot(beta1_d[keep2], type='l')
acf(beta1_d[keep2])
plot(sigma2_d[keep2], type='l')
acf(sigma2_d[keep2])
par(mfrow=c(1,2))
plot(diabetic$bmi, diabetic$bp)
plot(healthy$bmi, healthy$bp)
par(mfrow=c(1,2))
hist(sigma2_d)
hist(sigma2_h)
healthy_minus_diabetic <- beta1_h - beta1_d
quantile(healthy_minus_diabetic, c(.025, .975))
healthy_minus_diabetic <- beta1_h[keep] - beta1_d[keep]
quantile(healthy_minus_diabetic, c(.025, .975))
healthy_minus_diabetic <- beta1_h[keep2] - beta1_d[keep2]
quantile(healthy_minus_diabetic, c(.025, .975))
healthy_minus_diabetic <- beta1_h[keep2] - beta1_d[keep2]
quantile(healthy_minus_diabetic, c(.025, .975))
healthy_minus_diabetic <- beta1_h[keep2] - beta1_d[keep2]
quantile(healthy_minus_diabetic, c(.025, .975))
set.seed(101)
control <- c(35.25,43.21, 47.63, 48.99, 32.34, 34.69, 34.39,
36.58, 33.85, 32.26, 36.71, 35.01, 38.42, 39.98, 40.04)
tmt <- c(35.40, 44.79, 51.10, 50.66, 31.25, 38.80, 39.65, 38.49,
34.97, 32.24, 34.18, 33.46, 44.45, 42.86, 39.11)
# 1
# a.
treatment_ybar <- mean(tmt)
treatment_n <- length(tmt)
treatment_s2 <- var(tmt)
treatment_m <- 40
treatment_v <- 10^2
treatment_a <- treatment_b <- 1
control_ybar <- mean(control)
control_n <- length(control)
control_s2 <- var(control)
control_m <- 35
control_v <- 10^2
control_a <- control_b <- 1
treatment_mu <- numeric()
treatment_sigma2 <- numeric()
control_mu <- numeric()
control_sigma2 <- numeric()
treatment_mu[1] <- treatment_ybar
treatment_sigma2[1] <- treatment_s2
control_mu[1] <- control_ybar
control_sigma2[1] <- control_s2
J <- 100000
for(j in 2:J) {
treatment_mstar <- (treatment_n*treatment_ybar*treatment_v + treatment_m*treatment_sigma2[j-1]) / (treatment_n*treatment_v + treatment_sigma2[j-1])
treatment_vstar <- (treatment_v*treatment_sigma2[j-1]) / (treatment_n*treatment_v + treatment_sigma2[j-1])
treatment_mu[j] <- rnorm(1, treatment_mstar, sqrt(treatment_vstar))
treatment_astar <- treatment_a + .5*treatment_n
treatment_bstar <- treatment_b + .5*sum((tmt - treatment_mu[j])^2)
treatment_sigma2[j] <- rinvgamma(1, treatment_astar, treatment_bstar)
}
for(j in 2:J) {
control_mstar <- (control_n*control_ybar*control_v + control_m*control_sigma2[j-1]) / (control_n*control_v + control_sigma2[j-1])
control_vstar <- (control_v*control_sigma2[j-1]) / (control_n*control_v + control_sigma2[j-1])
control_mu[j] <- rnorm(1, control_mstar, sqrt(control_vstar))
control_astar <- control_a + .5*control_n
control_bstar <- control_b + .5*sum((control - control_mu[j])^2)
control_sigma2[j] <- rinvgamma(1, control_astar, control_bstar)
}
keep <- seq(1, J, by=10) + 1
control_minus_tmt_mu <- control_mu[keep] - treatment_mu[keep]
control_minus_tmt_sigma2 <- control_sigma2[keep] - treatment_sigma2[keep]
par(mfrow=c(2,2))
plot(control_minus_tmt_mu, type='l')
plot(control_minus_tmt_sigma2, type='l')
acf(control_minus_tmt_mu)
acf(control_minus_tmt_sigma2)
# b.
par(mfrow=c(2,2))
thetas1 <- seq(0, 100, length=1001)
plot(thetas1, dnorm(thetas1, treatment_m, sqrt(treatment_v)), main="Prior and Posterior Distributions mu_t", type='l', xlab=expression(mu[t]), ylab="Density", lwd=3, col="gray", ylim=c(0,.3))
lines(thetas1, dnorm(thetas1, treatment_mstar, sqrt(treatment_vstar)), col="black", lwd=3)
legend("topright", legend=c("Prior", "Posterior"), col=c("gray", "black"), lty=1)
plot(thetas1, dnorm(thetas1, control_m, sqrt(control_v)), main="Prior and Posterior Distributions for mu_c", type='l', xlab=expression(mu[c]), ylab="Density", lwd=3, col="gray", ylim=c(0,.35))
lines(thetas1, dnorm(thetas1, control_mstar, sqrt(control_vstar)), col="black", lwd=3)
legend("topright", legend=c("Prior", "Posterior"), col=c("gray", "black"), lty=1)
plot(thetas1, dinvgamma(thetas1, treatment_a, treatment_b), main="Prior and Posterior Distributions for sigma2_t", type='l', xlab=expression(sigma[t]^"2"), ylab="Density", lwd=3, col="gray")
lines(thetas1, dinvgamma(thetas1, treatment_astar, treatment_bstar), col="black", lwd=3)
legend("topright", legend=c("Prior", "Posterior"), col=c("gray", "black"), lty=1)
plot(thetas1, dinvgamma(thetas1, control_a, control_b), main="Prior and Posterior Distributions for sigma2_c", type='l', xlab=expression(sigma[c]^"2"), ylab="Density", lwd=3, col="gray")
lines(thetas1, dinvgamma(thetas1, control_astar, control_bstar), col="black", lwd=3)
legend("topright", legend=c("Prior", "Posterior"), col=c("gray", "black"), lty=1)
# c.
plot(density(control_minus_tmt_mu), main="Posterior Distribution for mu_c - mu_t", lwd=3, xlab=expression(mu[c] - mu[t]))
quantile(control_minus_tmt_mu, c(.025, .975))
# ii.
hist(control - tmt)
# iii.
control_minus_tmt <- control - tmt
d_ybar <- mean(control_minus_tmt)
d_n <- length(control_minus_tmt)
d_sigma2 <- 7
d_m <- 0
d_v <- 5^2
d_mstar <- (d_n*d_v*d_ybar + d_sigma2*d_m) / (d_n*d_v + d_sigma2)
d_vstar <- d_v*d_sigma2 / (d_n*d_v + d_sigma2)
qnorm(c(.025, .975), d_mstar, sqrt(d_vstar))
# 2
m0 <- m1 <- 0
v0 <- v1 <- 100^2
a <- b <- 1
beta0_d <- beta1_d <- sigma2_d <- numeric()
beta0_h <- beta1_h <- sigma2_h <- numeric()
diabetic <- Pima.tr[Pima.tr$type == "Yes",]
bmi_d <- diabetic$bmi
bp_d <- diabetic$bp
healthy <- Pima.tr[Pima.tr$type == "No",]
bmi_h <- healthy$bmi
bp_h <- healthy$bp
lm_d <- lm(bp_d ~ bmi_d)
beta0_d[1] <- lm_d$coefficients[1]
beta1_d[1] <- lm_d$coefficients[2]
sigma2_d[1] <- summary(lm_d)$sigma^2
lm_h <- lm(bp_h ~ bmi_h)
beta0_h[1] <- lm_h$coefficients[1]
beta1_h[1] <- lm_h$coefficients[2]
sigma2_h[1] <- summary(lm_h)$sigma^2
K <- 1000000
n_d <- length(bp_d)
n_h <- length(bp_h)
for(k in 2:K){
# update beta0 by sampling from its complete conditional
m0star_h <- ((1/sigma2_h[k-1])*sum(bp_h - beta1_h[k-1]*bmi_h) + (1/v0)*m0)/
(n_h/sigma2_h[k-1] + 1/v0)
v0star_h <- 1/(n_h/sigma2_h[k-1] + 1/v0)
beta0_h[k] <- rnorm(1, m0star_h, sqrt(v0star_h))
# update beta1 by sampling from its complete conditional
m1star_h <- ((1/sigma2_h[k-1])*sum(bmi_h*(bp_h - beta0_h[k])) + (1/v1)*m1)/
(sum(bmi_h^2)/sigma2_h[k-1] + 1/v1)
v1star_h <- 1/(sum(bmi_h^2)/sigma2_h[k-1] + 1/v1)
beta1_h[k] <- rnorm(1, m1star_h, sqrt(v1star_h))
# update sigma2 by sampling from its complete conditional using a metropolis step
sig2_cand_h <- rnorm(1, sigma2_h[k-1], 25)
sigma2_h[k] <- sigma2_h[k-1]
if(sig2_cand_h > 0){
lpcand_h <- sum(dnorm(bp_h, beta0_h[k] + beta1_h[k]*bmi_h, sqrt(sig2_cand_h), log=TRUE)) +
dinvgamma(sig2_cand_h, a, b, log=TRUE)
lpcurr_h <- sum(dnorm(bp_h, beta0_h[k] + beta1_h[k]*bmi_h, sqrt(sigma2_h[k-1]), log=TRUE)) +
dinvgamma(sigma2_h[k-1], a, b, log=TRUE)
alpha_h <- min(1, exp(lpcand_h - lpcurr_h))
u_h <- runif(1,0,1)
if(alpha_h > u_h) sigma2_h[k] <- sig2_cand_h
}
}
for(k in 2:K){
# update beta0 by sampling from its complete conditional
m0star_d <- ((1/sigma2_d[k-1])*sum(bp_d - beta1_d[k-1]*bmi_d) + (1/v0)*m0)/
(n_d/sigma2_d[k-1] + 1/v0)
v0star_d <- 1/(n_d/sigma2_d[k-1] + 1/v0)
beta0_d[k] <- rnorm(1, m0star_d, sqrt(v0star_d))
# update beta1 by sampling from its complete conditional
m1star_d <- ((1/sigma2_d[k-1])*sum(bmi_d*(bp_d - beta0_d[k])) + (1/v1)*m1)/
(sum(bmi_d^2)/sigma2_d[k-1] + 1/v1)
v1star_d <- 1/(sum(bmi_d^2)/sigma2_d[k-1] + 1/v1)
beta1_d[k] <- rnorm(1, m1star_d, sqrt(v1star_d))
# update sigma2 by sampling from its complete conditional using a metropolis step
sig2_cand_d <- rnorm(1, sigma2_d[k-1], 50)
sigma2_d[k] <- sigma2_d[k-1]
if(sig2_cand_d > 0){
lpcand_d <- sum(dnorm(bp_d, beta0_d[k] + beta1_d[k]*bmi_d, sqrt(sig2_cand_d), log=TRUE)) +
dinvgamma(sig2_cand_d, a, b, log=TRUE)
lpcurr_d <- sum(dnorm(bp_d, beta0_d[k] + beta1_d[k]*bmi_d, sqrt(sigma2_d[k-1]), log=TRUE)) +
dinvgamma(sigma2_d[k-1], a, b, log=TRUE)
alpha_d <- min(1, exp(lpcand_d - lpcurr_d))
u_d <- runif(1,0,1)
if(alpha_d > u_d) sigma2_d[k] <- sig2_cand_d
}
}
keep2 <- seq(1, K, by=100) + 1
par(mfrow=c(3,2))
plot(beta0_h[keep2], type='l')
acf(beta0_h[keep2])
plot(beta0_h[keep2], type='l')
acf(beta1_h[keep2])
plot(sigma2_h[keep2], type='l')
acf(sigma2_h[keep2])
par(mfrow=c(3,2))
plot(beta0_d[keep2], type='l')
acf(beta0_d[keep2])
plot(beta1_d[keep2], type='l')
acf(beta1_d[keep2])
plot(sigma2_d[keep2], type='l')
acf(sigma2_d[keep2])
par(mfrow=c(1,2))
plot(diabetic$bmi, diabetic$bp)
plot(healthy$bmi, healthy$bp)
par(mfrow=c(1,2))
hist(sigma2_d)
hist(sigma2_h)
healthy_minus_diabetic <- beta1_h[keep2] - beta1_d[keep2]
quantile(healthy_minus_diabetic, c(.025, .975))
set.seed(101)
control <- c(35.25,43.21, 47.63, 48.99, 32.34, 34.69, 34.39,
36.58, 33.85, 32.26, 36.71, 35.01, 38.42, 39.98, 40.04)
tmt <- c(35.40, 44.79, 51.10, 50.66, 31.25, 38.80, 39.65, 38.49,
34.97, 32.24, 34.18, 33.46, 44.45, 42.86, 39.11)
# 1
# a.
treatment_ybar <- mean(tmt)
treatment_n <- length(tmt)
treatment_s2 <- var(tmt)
treatment_m <- 40
treatment_v <- 10^2
treatment_a <- treatment_b <- 1
control_ybar <- mean(control)
control_n <- length(control)
control_s2 <- var(control)
control_m <- 35
control_v <- 10^2
control_a <- control_b <- 1
treatment_mu <- numeric()
treatment_sigma2 <- numeric()
control_mu <- numeric()
control_sigma2 <- numeric()
treatment_mu[1] <- treatment_ybar
treatment_sigma2[1] <- treatment_s2
control_mu[1] <- control_ybar
control_sigma2[1] <- control_s2
J <- 100000
for(j in 2:J) {
treatment_mstar <- (treatment_n*treatment_ybar*treatment_v + treatment_m*treatment_sigma2[j-1]) / (treatment_n*treatment_v + treatment_sigma2[j-1])
treatment_vstar <- (treatment_v*treatment_sigma2[j-1]) / (treatment_n*treatment_v + treatment_sigma2[j-1])
treatment_mu[j] <- rnorm(1, treatment_mstar, sqrt(treatment_vstar))
treatment_astar <- treatment_a + .5*treatment_n
treatment_bstar <- treatment_b + .5*sum((tmt - treatment_mu[j])^2)
treatment_sigma2[j] <- rinvgamma(1, treatment_astar, treatment_bstar)
}
for(j in 2:J) {
control_mstar <- (control_n*control_ybar*control_v + control_m*control_sigma2[j-1]) / (control_n*control_v + control_sigma2[j-1])
control_vstar <- (control_v*control_sigma2[j-1]) / (control_n*control_v + control_sigma2[j-1])
control_mu[j] <- rnorm(1, control_mstar, sqrt(control_vstar))
control_astar <- control_a + .5*control_n
control_bstar <- control_b + .5*sum((control - control_mu[j])^2)
control_sigma2[j] <- rinvgamma(1, control_astar, control_bstar)
}
keep <- seq(1, J, by=10) + 1
control_minus_tmt_mu <- control_mu[keep] - treatment_mu[keep]
control_minus_tmt_sigma2 <- control_sigma2[keep] - treatment_sigma2[keep]
par(mfrow=c(2,2))
plot(control_minus_tmt_mu, type='l')
plot(control_minus_tmt_sigma2, type='l')
acf(control_minus_tmt_mu)
acf(control_minus_tmt_sigma2)
set.seed(101)
control <- c(35.25,43.21, 47.63, 48.99, 32.34, 34.69, 34.39,
36.58, 33.85, 32.26, 36.71, 35.01, 38.42, 39.98, 40.04)
tmt <- c(35.40, 44.79, 51.10, 50.66, 31.25, 38.80, 39.65, 38.49,
34.97, 32.24, 34.18, 33.46, 44.45, 42.86, 39.11)
# 1
# a.
treatment_ybar <- mean(tmt)
treatment_n <- length(tmt)
treatment_s2 <- var(tmt)
treatment_m <- 40
treatment_v <- 10^2
treatment_a <- treatment_b <- 1
control_ybar <- mean(control)
control_n <- length(control)
control_s2 <- var(control)
control_m <- 35
control_v <- 10^2
control_a <- control_b <- 1
treatment_mu <- numeric()
treatment_sigma2 <- numeric()
control_mu <- numeric()
control_sigma2 <- numeric()
treatment_mu[1] <- treatment_ybar
treatment_sigma2[1] <- treatment_s2
control_mu[1] <- control_ybar
control_sigma2[1] <- control_s2
J <- 100000
for(j in 2:J) {
treatment_mstar <- (treatment_n*treatment_ybar*treatment_v + treatment_m*treatment_sigma2[j-1]) / (treatment_n*treatment_v + treatment_sigma2[j-1])
treatment_vstar <- (treatment_v*treatment_sigma2[j-1]) / (treatment_n*treatment_v + treatment_sigma2[j-1])
treatment_mu[j] <- rnorm(1, treatment_mstar, sqrt(treatment_vstar))
treatment_astar <- treatment_a + .5*treatment_n
treatment_bstar <- treatment_b + .5*sum((tmt - treatment_mu[j])^2)
treatment_sigma2[j] <- rinvgamma(1, treatment_astar, treatment_bstar)
}
for(j in 2:J) {
control_mstar <- (control_n*control_ybar*control_v + control_m*control_sigma2[j-1]) / (control_n*control_v + control_sigma2[j-1])
control_vstar <- (control_v*control_sigma2[j-1]) / (control_n*control_v + control_sigma2[j-1])
control_mu[j] <- rnorm(1, control_mstar, sqrt(control_vstar))
control_astar <- control_a + .5*control_n
control_bstar <- control_b + .5*sum((control - control_mu[j])^2)
control_sigma2[j] <- rinvgamma(1, control_astar, control_bstar)
}
keep <- seq(1, J, by=10) + 1
control_minus_tmt_mu <- control_mu[keep] - treatment_mu[keep]
control_minus_tmt_sigma2 <- control_sigma2[keep] - treatment_sigma2[keep]
par(mfrow=c(2,2))
plot(control_minus_tmt_mu, type='l')
plot(control_minus_tmt_sigma2, type='l')
acf(control_minus_tmt_mu)
acf(control_minus_tmt_sigma2)
# b.
par(mfrow=c(2,2))
thetas1 <- seq(0, 100, length=1001)
plot(thetas1, dnorm(thetas1, treatment_m, sqrt(treatment_v)), main="Prior and Posterior Distributions mu_t", type='l', xlab=expression(mu[t]), ylab="Density", lwd=3, col="gray", ylim=c(0,.3))
lines(thetas1, dnorm(thetas1, treatment_mstar, sqrt(treatment_vstar)), col="black", lwd=3)
legend("topright", legend=c("Prior", "Posterior"), col=c("gray", "black"), lty=1)
plot(thetas1, dnorm(thetas1, control_m, sqrt(control_v)), main="Prior and Posterior Distributions for mu_c", type='l', xlab=expression(mu[c]), ylab="Density", lwd=3, col="gray", ylim=c(0,.35))
lines(thetas1, dnorm(thetas1, control_mstar, sqrt(control_vstar)), col="black", lwd=3)
legend("topright", legend=c("Prior", "Posterior"), col=c("gray", "black"), lty=1)
plot(thetas1, dinvgamma(thetas1, treatment_a, treatment_b), main="Prior and Posterior Distributions for sigma2_t", type='l', xlab=expression(sigma[t]^"2"), ylab="Density", lwd=3, col="gray")
lines(thetas1, dinvgamma(thetas1, treatment_astar, treatment_bstar), col="black", lwd=3)
legend("topright", legend=c("Prior", "Posterior"), col=c("gray", "black"), lty=1)
plot(thetas1, dinvgamma(thetas1, control_a, control_b), main="Prior and Posterior Distributions for sigma2_c", type='l', xlab=expression(sigma[c]^"2"), ylab="Density", lwd=3, col="gray")
lines(thetas1, dinvgamma(thetas1, control_astar, control_bstar), col="black", lwd=3)
legend("topright", legend=c("Prior", "Posterior"), col=c("gray", "black"), lty=1)
# c.
plot(density(control_minus_tmt_mu), main="Posterior Distribution for mu_c - mu_t", lwd=3, xlab=expression(mu[c] - mu[t]))
quantile(control_minus_tmt_mu, c(.025, .975))
# c.
plot(density(control_minus_tmt_mu), main="Posterior Distribution for mu_c - mu_t", lwd=3, xlab=expression(mu[c] - mu[t]))
quantile(control_minus_tmt_mu, c(.025, .975))
# iii.
control_minus_tmt <- control - tmt
d_ybar <- mean(control_minus_tmt)
d_n <- length(control_minus_tmt)
d_sigma2 <- 7
d_m <- 0
d_v <- 5^2
d_mstar <- (d_n*d_v*d_ybar + d_sigma2*d_m) / (d_n*d_v + d_sigma2)
d_vstar <- d_v*d_sigma2 / (d_n*d_v + d_sigma2)
qnorm(c(.025, .975), d_mstar, sqrt(d_vstar))
# 2
m0 <- m1 <- 0
v0 <- v1 <- 100^2
a <- b <- 1
beta0_d <- beta1_d <- sigma2_d <- numeric()
beta0_h <- beta1_h <- sigma2_h <- numeric()
diabetic <- Pima.tr[Pima.tr$type == "Yes",]
bmi_d <- diabetic$bmi
bp_d <- diabetic$bp
healthy <- Pima.tr[Pima.tr$type == "No",]
bmi_h <- healthy$bmi
bp_h <- healthy$bp
lm_d <- lm(bp_d ~ bmi_d)
beta0_d[1] <- lm_d$coefficients[1]
beta1_d[1] <- lm_d$coefficients[2]
sigma2_d[1] <- summary(lm_d)$sigma^2
lm_h <- lm(bp_h ~ bmi_h)
beta0_h[1] <- lm_h$coefficients[1]
beta1_h[1] <- lm_h$coefficients[2]
sigma2_h[1] <- summary(lm_h)$sigma^2
K <- 1000000
n_d <- length(bp_d)
n_h <- length(bp_h)
for(k in 2:K){
# update beta0 by sampling from its complete conditional
m0star_h <- ((1/sigma2_h[k-1])*sum(bp_h - beta1_h[k-1]*bmi_h) + (1/v0)*m0)/
(n_h/sigma2_h[k-1] + 1/v0)
v0star_h <- 1/(n_h/sigma2_h[k-1] + 1/v0)
beta0_h[k] <- rnorm(1, m0star_h, sqrt(v0star_h))
# update beta1 by sampling from its complete conditional
m1star_h <- ((1/sigma2_h[k-1])*sum(bmi_h*(bp_h - beta0_h[k])) + (1/v1)*m1)/
(sum(bmi_h^2)/sigma2_h[k-1] + 1/v1)
v1star_h <- 1/(sum(bmi_h^2)/sigma2_h[k-1] + 1/v1)
beta1_h[k] <- rnorm(1, m1star_h, sqrt(v1star_h))
# update sigma2 by sampling from its complete conditional using a metropolis step
sig2_cand_h <- rnorm(1, sigma2_h[k-1], 25)
sigma2_h[k] <- sigma2_h[k-1]
if(sig2_cand_h > 0){
lpcand_h <- sum(dnorm(bp_h, beta0_h[k] + beta1_h[k]*bmi_h, sqrt(sig2_cand_h), log=TRUE)) +
dinvgamma(sig2_cand_h, a, b, log=TRUE)
lpcurr_h <- sum(dnorm(bp_h, beta0_h[k] + beta1_h[k]*bmi_h, sqrt(sigma2_h[k-1]), log=TRUE)) +
dinvgamma(sigma2_h[k-1], a, b, log=TRUE)
alpha_h <- min(1, exp(lpcand_h - lpcurr_h))
u_h <- runif(1,0,1)
if(alpha_h > u_h) sigma2_h[k] <- sig2_cand_h
}
}
for(k in 2:K){
# update beta0 by sampling from its complete conditional
m0star_d <- ((1/sigma2_d[k-1])*sum(bp_d - beta1_d[k-1]*bmi_d) + (1/v0)*m0)/
(n_d/sigma2_d[k-1] + 1/v0)
v0star_d <- 1/(n_d/sigma2_d[k-1] + 1/v0)
beta0_d[k] <- rnorm(1, m0star_d, sqrt(v0star_d))
# update beta1 by sampling from its complete conditional
m1star_d <- ((1/sigma2_d[k-1])*sum(bmi_d*(bp_d - beta0_d[k])) + (1/v1)*m1)/
(sum(bmi_d^2)/sigma2_d[k-1] + 1/v1)
v1star_d <- 1/(sum(bmi_d^2)/sigma2_d[k-1] + 1/v1)
beta1_d[k] <- rnorm(1, m1star_d, sqrt(v1star_d))
# update sigma2 by sampling from its complete conditional using a metropolis step
sig2_cand_d <- rnorm(1, sigma2_d[k-1], 50)
sigma2_d[k] <- sigma2_d[k-1]
if(sig2_cand_d > 0){
lpcand_d <- sum(dnorm(bp_d, beta0_d[k] + beta1_d[k]*bmi_d, sqrt(sig2_cand_d), log=TRUE)) +
dinvgamma(sig2_cand_d, a, b, log=TRUE)
lpcurr_d <- sum(dnorm(bp_d, beta0_d[k] + beta1_d[k]*bmi_d, sqrt(sigma2_d[k-1]), log=TRUE)) +
dinvgamma(sigma2_d[k-1], a, b, log=TRUE)
alpha_d <- min(1, exp(lpcand_d - lpcurr_d))
u_d <- runif(1,0,1)
if(alpha_d > u_d) sigma2_d[k] <- sig2_cand_d
}
}
keep2 <- seq(1, K, by=100) + 1
par(mfrow=c(3,2))
plot(beta0_h[keep2], type='l')
acf(beta0_h[keep2])
plot(beta0_h[keep2], type='l')
acf(beta1_h[keep2])
plot(sigma2_h[keep2], type='l')
acf(sigma2_h[keep2])
par(mfrow=c(3,2))
plot(beta0_d[keep2], type='l')
acf(beta0_d[keep2])
plot(beta1_d[keep2], type='l')
acf(beta1_d[keep2])
plot(sigma2_d[keep2], type='l')
acf(sigma2_d[keep2])
par(mfrow=c(1,2))
plot(diabetic$bmi, diabetic$bp)
plot(healthy$bmi, healthy$bp)
par(mfrow=c(1,2))
hist(sigma2_d)
hist(sigma2_h)
healthy_minus_diabetic <- beta1_h[keep2] - beta1_d[keep2]
quantile(healthy_minus_diabetic, c(.025, .975))
knitr::opts_chunk$set(echo = TRUE)
# 67
organic_matter <- c(1.10, 5.09, 0.97, 1.59, 4.60, 0.32, 0.55, 1.45, 0.14, 4.47, 1.20, 3.50, 5.02, 4.67, 5.22, 2.69, 3.98, 3.17, 3.03, 2.21, 0.69, 4.47, 3.31, 1.17, 0.76, 1.17, 1.57, 2.62, 1.66, 2.05)
t.test(organic_matter, mu = 3, alternative = "two.sided")
var(organic_matter)
# 1.
1.5/sqrt(30)
knitr::opts_chunk$set(echo = TRUE)
qt(.99, 9)
# 47
fat_content <- c(25.2, 21.3, 22.8, 17.0, 29.8, 21.0, 25.5, 16.0, 20.9, 19.5)
21.9 + qt(.99, 9) * sd(fat_content) / sqrt(10)
# 2
m0 <- m1 <- 0
a <- b <- 1
beta0_d <- beta1_d <- sigma2_d <- numeric()
beta0_h <- beta1_h <- sigma2_h <- numeric()
diabetic <- Pima.tr[Pima.tr$type == "Yes",]
diabetic
library(tidyverse)
library(vroom)
pwd
# Read in the data
bike <- vroom("./train.csv")
cwd
# Read in the data
bike <- vroom("./train.csv")
getwd()
ls
setwd("./STAT 348")
getwd()
setwd("./KaggleBikeShare")
getwd()
library(tidyverse)
library(vroom)
# Read in the data
bike <- vroom("./train.csv")
bike
